from typing import final


def align_code(source: str, /, start: int = ..., end: int = ...) -> str: ...


@final
class statement_type:
    def __str__(self) -> str: ...

    def __repr__(self) -> str: ...

    def __int__(self) -> int: ...


NONE: statement_type = ...
RAW: statement_type = ...
INLINE: statement_type = ...
BLOCK: statement_type = ...


@final
class parser_match:
    @property
    def start(self) -> int: ...

    @property
    def end(self) -> int: ...

    @property
    def type(self) -> statement_type: ...

    @property
    def value(self) -> str: ...


@final
class parser_iterator:
    @property
    def _source(self) -> str: ...

    def __next__(self) -> parser_match: ...


def parse(source: str, /) -> parser_iterator: ...


@final
class prepare_result:
    @property
    def type(self) -> statement_type: ...

    @property
    def value(self) -> str: ...


@final
class prepare_iterator:
    def __iter__(self) -> prepare_iterator: ...

    def __next__(self) -> prepare_result: ...


def prepare(pi: parser_iterator, /) -> prepare_iterator: ...
